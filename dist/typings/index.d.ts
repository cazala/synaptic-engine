import Engine from './Engine';
import Network from './Network';
import Trainer from './Trainer';
import Paper from './backends/Paper';
declare const backends: {
    ASM: {};
    BLAS: {};
    CPU: {};
    GPU: {};
    Paper: typeof Paper;
    WebWorker: {};
};
import Activation = require('./layers/Activation');
import Convolution from './layers/Convolution';
import Convolution2D from './layers/Convolution2D';
import Convolution3D from './layers/Convolution3D';
import Dense from './layers/Dense';
import Dropout from './layers/Dropout';
import Input from './layers/Input';
import Input2D from './layers/Input2D';
import Input3D from './layers/Input3D';
import InputToOutput = require('./layers/InputToOutput');
import LSTM from './layers/LSTM';
import MaxPool from './layers/MaxPool';
import MaxPool2D from './layers/MaxPool2D';
import MaxPool3D from './layers/MaxPool3D';
import ZeroPadding from './layers/ZeroPadding';
import ZeroPadding2D from './layers/ZeroPadding2D';
import ZeroPadding3D from './layers/ZeroPadding3D';
declare const layers: {
    Activation: typeof Activation;
    Convolution: typeof Convolution;
    Convolution2D: typeof Convolution2D;
    Convolution3D: typeof Convolution3D;
    Dense: typeof Dense;
    Dropout: typeof Dropout;
    Input: typeof Input;
    Input2D: typeof Input2D;
    Input3D: typeof Input3D;
    InputToOutput: typeof InputToOutput;
    LSTM: typeof LSTM;
    MaxPool: typeof MaxPool;
    MaxPool2D: typeof MaxPool2D;
    MaxPool3D: typeof MaxPool3D;
    ZeroPadding: typeof ZeroPadding;
    ZeroPadding2D: typeof ZeroPadding2D;
    ZeroPadding3D: typeof ZeroPadding3D;
};
export { Engine, Network, Trainer, backends, layers };
